#!/bin/bash

# Remover
printf "\e[1;34m"
if [ "$1" == "--remove" -o "$1" == "--remove-all" ]; then
	agree="Y"
    if [ "$1" != "--remove-all" ]; then
	    printf "Remove configuration file?"
        read agree
    fi

	if [ "$agree" == "Y" -o "$agree" == "y" ]; then
		printf "\e[1;33mRemoving configuration file..\e[1;34m\n"
		rm -rf ~/.config/vac
	fi
	
	agree="Y"	
    
    if [ "$1" != "--remove-all" ]; then
	    printf "Remove all logging files?"
        read agree
    fi

	if [ "$agree" == "Y" -o "$agree" == "y" ]; then
		printf "\e[1;33mRemoving logging file..\e[1;34m\n"
		rm -rf ~/.var/vac
	fi

    agree="Y"
    if [ "$1" != "--remove-all" ]; then
        printf "Remove all memory files?"
        read agree
    fi

    if [ "$agree" == "Y" -o "$agree" == "y" ]; then
        printf "\e[1;33mRemoving memory file..\e[1;34m\n"
        rm -rf ~/Documents/VAC
    fi
	
	agree="Y"
	printf "Remove ollama?"
	read agree
	
	if [ "$agree" == "Y" -o "$agree" == "y" ]; then
		printf "\e[1;33mRemoving ollama...\e[1;34m\n"
		sudo rm -rf /usr/local/bin/ollama 2>&1 >/dev/null
	fi

	printf "\e[1;32mVAC removal has been exited successfully..\e[0;37m\n"		
	exit 0
fi


if [ "$1" == "--help" ]; then
    printf "+----------------------------------------------------------------+\n"
    printf "|         Virtual Arch Companion [VAC] \e[1;32mInstallation Setup \e[1;34m       |\n"
    printf "+-----+----------------------------------------------------------+\n"
    printf "|\e[1;32mUsage\e[1;34m|                                                          |\n"
    printf "+-----+                                                          |\n"
    printf "|(*) \e[1;32msetup.sh              \e[1;33m<- Normal Installation                \e[1;34m|\n"
    printf "|(*) \e[1;32msetup.sh --auto       \e[1;33m<- Automatic Installation (auto 'yes')\e[1;34m|\n"
    printf "|(*) \e[1;32msetup.sh --remove     \e[1;33m<- Normal Remove VAC                  \e[1;34m|\n"
    printf "|(*) \e[1;32msetup.sh --remove-all \e[1;33m<- Automatic Remove VAC (auto 'yes')  \e[1;34m|\n"
    printf "+----------------------------------------------------------------+\n"
    exit 0
fi


# Setup configuration file

continue_write="n"

printf "Confirm Installation (y/n) : "
read continue_write

if [ "$continue_write" != "y" ]; then
	printf "Okay then!\n"
	exit
fi

printf "|------------ \e[1;33m(1/3)\e[1;34m SETTING UP FOLDERS AND FILES -------------|\n\n"

# Setup configuration file
printf "\e[1;33m1/3)\e[1;34m Set up configuration file\n"
continue_write="Y"
if [ -d ~/.config/vac ]; then
    continue_write="n"
    printf "~/.config/vac directory is already found. \e[1;31mRewrite the folder?\e[1;34m"
    read continue_write
fi

if [ "$continue_write" == "Y" -o "$continue_write" == "y" ]; then
    printf "Writing to ~/.config/vac/...\n"
    mkdir -p ~/.config/vac/
    touch ~/.config/vac/config.json
    printf '{\n	"model": "arch-anime-assistant",\n	"allow-command-prompt": true,\n	"confirmation-command-prompt": true,\n	"first-prompt": "",	\n	"activate-memory": true,\n	"max-output-words": 0,\n	"save-message-history":false,\n	"debug-file-path": "~/.var/vac/debug.log",\n	"message-folder-path": "~/.var/vac/messages",\n	"sounds-folder-path": "$FILE_PATH/Sounds",\n	"memory-file-path": "~/Documents/VAC/memory.json"\n}' > ~/.config/vac/config.json
else
	printf "Skipping...\n"
fi

# Setup logging and chat file
printf "\e[1;33m2/3)\e[1;34m Set up chat logging folder...\n"
continue_write="Y"
if [ -d ~/.var/vac ]; then
    continue_write="n"
    printf "~/.var/vac directory is already found. \e[1;31mRewrite the folder?\e[1;34m"
    read continue_write
fi

if [ "$continue_write" == "Y" -o "$continue_write" == "y" ]; then
    printf "Writing to ~/.var/vac/...\n"
    mkdir -p ~/.var/vac
    mkdir ~/.var/vac/messages
    touch ~/.var/vac/debug.log
else
	printf "Skipping...\n"
fi

# Setup memory file
printf "\e[1;33m3/3)\e[1;34m Set up memory directories...\n"
continue_write="Y"
if [ -d ~/Documents/VAC ]; then
    continue_write="n"
    printf "~/Documents/VAC directory is already found. \e[1;31mRewrite the folder?\e[1;34m"
    read continue_write
fi

if [ "$continue_write" == "Y" -o "$continue_write" == "y" ]; then
    printf "Writing to ~/.var/vac/..."
    mkdir -p ~/Documents/VAC
    touch ~/Documents/VAC/memory.json
else
	printf "Skipping...\n"
fi


# Setup ollama
printf "|------------ \e[1;33m(2/3)\e[1;34m SETUP OLLAMA FOR AI AGENT ------------|\n\n"

if ! ollama -v  2>&1 >/dev/null
then
    printf "ollama could not be found.. want to install it with 'curl -fsSL https://ollama.com/install.sh | sh'?"

    install_ollama=""
    read install_ollama

    if [ "$install_ollama" == "Y" -o "$install_ollama" == "y" ]; then
        curl -fsSL https://ollama.com/install.sh | sh
    else
        exit 0
    fi
fi

ollama pull llama3.1:8b
ollama create arch-anime-assistant -f arch-anime-assistant

# Setup .bashrc
printf "|--------------- \e[1;33m(3/3)\e[1;34m SETUP ENVIRONMENT ----------------|\n\n"

setup_environment=""
printf "Want to setup for the variable environment? (Y/n) "
read setup_environment
if [ "$setup_environment" == 'Y' -o "$setup_environment" == 'y' ]; then
    is_using_bashrc=""
    printf "Are you using bashrc? (Y/n)"
    read is_using_bashrc
    
    if [ "$is_using_bashrc" == "Y" -o "$is_using_bashrc" == "y" ]; then
        printf "\n\nexport PATH=${PWD}/:\$PATH" >> ~/.bashrc
    else
        is_using_zsh=""
        printf "Are you using zsh? (Y/n)"
        read is_using_zsh
        if [ "$is_using_zsh" == "Y" -o "$is_using_zsh" == "y" ]; then
            printf "\n\nexport PATH=${PWD}/:\$PATH" >> ~/.zshrc
        else
            shell_configuration_file=""
            printf "Specify the location of your shell configuration file: "
            read shell_configuration_file
            # Expand the path if it starts with '~'
            shell_configuration_file=$(eval echo "$shell_configuration_file")
            printf "\n\nexport PATH=${PWD}/:\$PATH" >> "$shell_configuration_file"
        fi
    fi
	
	printf "\e[1;32mEnv Variable has been setup successfully.\n"
fi

# DONE!
printf "------------------- DONE!! ------------------"
printf "\e[1;32msetup successfully exited!\e[1;37m\n"
printf "you can change configuration at:~/.config/vac/config.json\n"
printf "Have Fun With Arch~\n"
exit 0
